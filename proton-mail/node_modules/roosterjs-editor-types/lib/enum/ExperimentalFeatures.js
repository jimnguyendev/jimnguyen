"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExperimentalFeatures = void 0;
/**
 * Experimental feature flags
 */
var ExperimentalFeatures;
(function (ExperimentalFeatures) {
    /**
     * @deprecated This feature is always enabled
     */
    ExperimentalFeatures["NewIndentation"] = "NewIndentation";
    /**
     * @deprecated This feature is always enabled
     */
    ExperimentalFeatures["NewBullet"] = "NewBullet";
    /**
     * @deprecated This feature is always enabled
     */
    ExperimentalFeatures["NewNumbering"] = "NewNumbering";
    /**
     * @deprecated This feature is always enabled
     */
    ExperimentalFeatures["ListChain"] = "ListChain";
    /**
     * @deprecated This feature is always enabled
     */
    ExperimentalFeatures["MergePastedLine"] = "MergePastedLine";
    /**
     * Resize an image horizontally or vertically
     */
    ExperimentalFeatures["SingleDirectionResize"] = "SingleDirectionResize";
    /**
     * Try retrieve link preview information when paste
     */
    ExperimentalFeatures["PasteWithLinkPreview"] = "PasteWithLinkPreview";
    /**
     * Rotate an inline image (requires ImageEdit plugin)
     */
    ExperimentalFeatures["ImageRotate"] = "ImageRotate";
    /**
     * Crop an inline image (requires ImageEdit plugin)
     */
    ExperimentalFeatures["ImageCrop"] = "ImageCrop";
    /**
     * Check if the element has a style attribute, if not, apply the default format
     */
    ExperimentalFeatures["AlwaysApplyDefaultFormat"] = "AlwaysApplyDefaultFormat";
    /**
     * Paste the Html instead of the Img when the Html Body only have one IMG Child node
     */
    ExperimentalFeatures["ConvertSingleImageBody"] = "ConvertSingleImageBody";
})(ExperimentalFeatures = exports.ExperimentalFeatures || (exports.ExperimentalFeatures = {}));
//# sourceMappingURL=ExperimentalFeatures.js.map