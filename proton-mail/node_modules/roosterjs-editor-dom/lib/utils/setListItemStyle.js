"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ContentTraverser_1 = require("../contentTraverser/ContentTraverser");
var findClosestElementAncestor_1 = require("./findClosestElementAncestor");
var getStyles_1 = require("../style/getStyles");
var safeInstanceOf_1 = require("./safeInstanceOf");
var setStyles_1 = require("../style/setStyles");
/**
 * Set the Style of a List Item provided, with the styles that the inline child elements have
 * If the child inline elements have different styles, it will not modify the styles of the list item
 * @param element the LI Element to set the styles
 * @param styles The styles that should be applied to the element.
 */
function setListItemStyle(element, styles) {
    var elementsStyles = getInlineChildElementsStyle(element);
    var stylesToApply = (0, getStyles_1.default)(element);
    styles.forEach(function (styleName) {
        var styleValues = elementsStyles.map(function (style) {
            return style[styleName] !== undefined ? style[styleName] : '';
        });
        if (styleValues &&
            (styleValues.length == 1 || new Set(styleValues).size == 1) &&
            styleValues[0]) {
            stylesToApply[styleName] = styleValues[0];
        }
    });
    (0, setStyles_1.default)(element, stylesToApply);
}
exports.default = setListItemStyle;
function getInlineChildElementsStyle(element) {
    var result = [];
    var contentTraverser = ContentTraverser_1.default.createBodyTraverser(element);
    var currentInlineElement;
    while (contentTraverser.currentInlineElement != currentInlineElement) {
        currentInlineElement = contentTraverser.currentInlineElement;
        var currentNode = currentInlineElement.getContainerNode();
        currentNode = (0, findClosestElementAncestor_1.default)(currentNode);
        if ((0, safeInstanceOf_1.default)(currentNode, 'HTMLElement')) {
            var childStyle = (0, getStyles_1.default)(currentNode);
            if (childStyle) {
                result.push(childStyle);
            }
        }
        contentTraverser.getNextInlineElement();
    }
    return result;
}
//# sourceMappingURL=setListItemStyle.js.map