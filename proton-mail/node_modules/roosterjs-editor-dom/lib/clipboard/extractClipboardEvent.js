"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var extractClipboardItems_1 = require("./extractClipboardItems");
var extractClipboardItemsForIE_1 = require("./extractClipboardItemsForIE");
var toArray_1 = require("../utils/toArray");
/**
 * @deprecated Use extractClipboardItems and extractClipboardItemsForIE instead
 * Extract a Clipboard event
 * @param event The paste event
 * @param callback Callback function when data is ready
 * @param options Options to retrieve more items from the event, including HTML string and other customized items
 * @returns An object with the following properties:
 *  types: Available types from the clipboard event
 *  text: Plain text from the clipboard event
 *  image: Image file from the clipboard event
 *  html: Html string from the clipboard event. When set to null, it means there's no HTML found from the event.
 *   When set to undefined, it means can't retrieve HTML string, there may be HTML string but direct retrieving is
 *   not supported by browser.
 */
function extractClipboardEvent(event, callback, options) {
    var dataTransfer = event.clipboardData ||
        event.target.ownerDocument.defaultView.clipboardData;
    if (dataTransfer.items) {
        event.preventDefault();
        (0, extractClipboardItems_1.default)((0, toArray_1.default)(dataTransfer.items), options).then(callback);
    }
    else {
        (0, extractClipboardItemsForIE_1.default)(dataTransfer, callback, options);
    }
}
exports.default = extractClipboardEvent;
//# sourceMappingURL=extractClipboardEvent.js.map